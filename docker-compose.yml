version: '3.8'

services:
  # Application principale
  app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://whatsapp_user:whatsapp_password@postgres:5432/whatsapp_agent
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - whatsapp-network

  # Base de données PostgreSQL
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=whatsapp_agent
      - POSTGRES_USER=whatsapp_user
      - POSTGRES_PASSWORD=whatsapp_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - whatsapp-network

  # Redis pour le cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - whatsapp-network
    command: redis-server --appendonly yes

  # Adminer pour la gestion de la base de données (optionnel)
  adminer:
    image: adminer:latest
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - whatsapp-network
    profiles:
      - tools

  # Redis Commander pour la gestion de Redis (optionnel)
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - whatsapp-network
    profiles:
      - tools

volumes:
  postgres_data:
  redis_data:

networks:
  whatsapp-network:
    driver: bridge